name: Docker Publish
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: <%= REGISTRY || '' %>
      IMAGE_NAME: <%= IMAGE_NAME || '' %>
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: <%= NODE_VERSION || '20' %>
          cache: 'npm'
      - run: npm ci
      - run: |
          echo "Building Docker image..."
          if [ -z "${{ env.REGISTRY }}" ] || [ -z "${{ env.IMAGE_NAME }}" ]; then
            echo "Registry or image name not set; skipping push."; exit 0; fi
      - name: Log in to registry
        if: ${{ env.REGISTRY != '' && env.IMAGE_NAME != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GHCR_PAT }}
      - name: Build
        if: ${{ env.REGISTRY != '' && env.IMAGE_NAME != '' }}
        run: |
          docker build -f infra/docker/web.Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
      - name: Push (sha)
        if: ${{ env.REGISTRY != '' && env.IMAGE_NAME != '' }}
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Tag latest
        if: ${{ env.REGISTRY != '' && env.IMAGE_NAME != '' }}
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
