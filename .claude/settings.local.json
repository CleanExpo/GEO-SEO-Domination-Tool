{
  "permissions": {
    "allow": [
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_network_requests",
      "Bash(git checkout:*)",
      "Bash(npm run build:*)",
      "Bash(npm link:*)",
      "Bash(geo bluegreen:*)",
      "Bash(npm install)",
      "Bash(npm run dev:*)",
      "Bash(geo doctor:*)",
      "Bash(docker compose:*)",
      "Bash(git init:*)",
      "Bash(docker ps:*)",
      "Bash(start http://localhost:8080)",
      "Bash(code docs/SHIP_IT_RUNBOOK.md)",
      "Bash(geo release:*)",
      "Bash(curl:*)",
      "Bash(start http://localhost:3004/analytics)",
      "Bash(pwsh:*)",
      "Bash(powershell.exe:*)",
      "Bash(docker exec:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git merge:*)",
      "Bash(cat:*)",
      "Bash(start http://localhost:3004/health)",
      "Read(//c/Users/Disaster Recovery 4/Downloads/**)",
      "Bash(start http://localhost:3004/settings/integrations)",
      "mcp__vercel__list_deployments",
      "mcp__vercel__deploy_to_vercel",
      "Bash(vercel deploy:*)",
      "Bash(start http://localhost:3004/login)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_type",
      "mcp__vercel__get_project",
      "mcp__vercel__list_projects",
      "mcp__vercel__get_deployment_build_logs",
      "WebFetch(domain:api-docs.deepseek.com)",
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "Bash(grep:*)",
      "Bash(test:*)",
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(gh pr create:*)",
      "Bash(npx tsc:*)",
      "Bash(git push:*)",
      "Bash(docker:*)",
      "mcp__vercel__list_teams",
      "mcp__vercel__get_deployment",
      "mcp__semrush__semrush_toolkit_info",
      "mcp__semrush__semrush_report_schema",
      "mcp__semrush__semrush_report",
      "Bash(npx tsx:*)",
      "Bash(DATAFORSEO_API_KEY=\"phill@disasterrecovery.com.au:f1f7eebc972699a7\" npx tsx scripts/test-dataforseo.ts)",
      "Bash(git log:*)",
      "WebFetch(domain:gridmybusiness.com)",
      "Bash(vercel env:*)",
      "Bash(npx supabase:*)",
      "Bash(powershell:*)",
      "Bash(timeout 180 npm run build)",
      "Bash(vercel link:*)",
      "Bash(git rm:*)",
      "Bash(rm:*)",
      "Bash(if [ -d \"_tactical_disabled\" ])",
      "Bash(then rm -rf _tactical_disabled)",
      "Bash(else echo \"✗ app/_tactical_disabled not found\")",
      "Bash(fi)",
      "Bash(if [ -d \"_agents_disabled\" ])",
      "Bash(then rm -rf _agents_disabled)",
      "Bash(else echo \"✗ app/sandbox/_agents_disabled not found\")",
      "Bash(npx:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(tree:*)",
      "Bash(node:*)",
      "Bash(sqlite3:*)",
      "Bash(tasklist)",
      "Bash(tee:*)",
      "Bash(start http://localhost:3000/content-opportunities)",
      "Bash(start http://localhost:3000/task-inbox)",
      "Bash(timeout 30 npm run db:init)",
      "Bash(timeout:*)",
      "Bash(/dev/null)",
      "Bash(awk:*)",
      "Bash(npm:*)",
      "Bash(if [ -f .env.local ])",
      "Bash(then grep -E \"(DATABASE_URL|POSTGRES_URL)\" .env.local)",
      "Bash(else echo \".env.local not found\")",
      "Bash(if [ -f .env.development ])",
      "Bash(then grep -E \"(DATABASE_URL|POSTGRES_URL)\" .env.development)",
      "Bash(else echo \".env.development not found\")",
      "Bash(if [ -d \".next\" ])",
      "Bash(then rm -rf .next)",
      "Bash(else echo \".next directory not found\")",
      "Bash(while read pid)",
      "Bash(do taskkill //F //PID $pid)",
      "Bash(done)",
      "Bash(if [ -f .env ])",
      "Bash(then cat .env)",
      "Bash(else echo \".env file does not exist\")",
      "Bash(vercel:*)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(PORT=3002 npm run dev)",
      "Bash(python:*)",
      "Bash(xargs:*)",
      "Bash(do echo \"Killing PID: $pid\")",
      "Bash(for shell_id in 395546 573600 f11fd6 14edcd 14e170 b0f31f ee6e5a a7c8ee 10d126 c2b28b eeaca6 571fa2 f23985 6a947d)",
      "Bash(do echo \"Attempting to kill shell $shell_id\")",
      "Bash(cmd //c:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "shadcn-ui",
    "shadcn",
    "supabase",
    "perplexity",
    "github",
    "google-maps",
    "filesystem"
  ]
}
