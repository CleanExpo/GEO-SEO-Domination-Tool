{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(then grep -E \"(DATABASE_URL|POSTGRES_URL)\" .env)",
      "Bash(else echo \".env file does not exist\")",
      "Bash(then grep -E \"(DATABASE_URL|POSTGRES_URL)\" .env.local)",
      "Bash(else echo \".env.local not found\")",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/create-onboarding-sessions.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/check-companies-table.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/create-onboarding-sessions-fixed.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/verify-onboarding-table.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/check-saved-onboarding-table.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/test-case-insensitive-load.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/check-company-portfolios-table.mjs)",
      "Bash(DATABASE_URL=\"postgresql://postgres.qwoggbbavikzhypzodcr:NwtXEg6aVNs7ZstH@aws-1-ap-southeast-2.pooler.supabase.com:5432/postgres\" node scripts/migrate-portfolios-add-columns.mjs)",
      "Bash(git remote add:*)",
      "Bash(git fetch:*)",
      "Bash(if [ -d \".next\" ])",
      "Bash(else echo \"âœ— .next folder not found\")",
      "Bash(echo $NODE_ENV)",
      "Bash(unset NODE_ENV)",
      "Bash(pkill:*)",
      "Bash(for pid in 214879 9de3b0 d63f15 86c76e 853fbf cb0e24)",
      "Bash(do echo \"Attempting shell $pid\")",
      "Bash(then grep -E \"(GOOGLE_API_KEY|GOOGLE_PAGESPEED)\" .env.local)",
      "Bash(find:*)",
      "Bash(git clone:*)",
      "Bash(echo $?)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(if [ -f \".env\" ])",
      "Bash(fi)",
      "Bash(if [ -f \".env.local\" ])",
      "Bash(npx playwright test:*)",
      "Bash(npx tsc:*)",
      "Bash(env)",
      "Bash(npx @playwright/mcp@latest:*)",
      "Bash(npx vercel:*)",
      "Bash(tee:*)",
      "Bash(echo $DATABASE_URL)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"Test $i:\")",
      "Bash(done)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(taskkill:*)",
      "Bash(timeout:*)",
      "Bash(npm run:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "shadcn-ui",
    "shadcn",
    "supabase",
    "perplexity",
    "github",
    "google-maps",
    "filesystem",
    "puppeteer-docker",
    "playwright-docker"
  ]
}
