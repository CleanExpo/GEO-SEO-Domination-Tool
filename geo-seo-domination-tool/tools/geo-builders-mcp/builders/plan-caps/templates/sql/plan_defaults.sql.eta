-- Plan default caps per role (idempotent)
-- roles: free, pro, admin â€” caps JSON keys should match usage kinds (build, deploy, api_call, job, custom)

create table if not exists public.plan_defaults (
  role text primary key check (role in ('free','pro','admin')),
  caps jsonb not null,
  updated_at timestamptz default now()
);

-- Seed sensible defaults
insert into public.plan_defaults(role, caps) values
  ('free', '{"build": 20, "deploy": 5, "api_call": 200}'::jsonb)
  on conflict (role) do nothing;
insert into public.plan_defaults(role, caps) values
  ('pro', '{"build": 1000, "deploy": 300, "api_call": 10000}'::jsonb)
  on conflict (role) do nothing;
insert into public.plan_defaults(role, caps) values
  ('admin', '{"build": 100000, "deploy": 50000, "api_call": 1000000}'::jsonb)
  on conflict (role) do nothing;

alter table public.plan_defaults enable row level security;
-- View for all authenticated; lock writes to admins via service role in API
create policy if not exists plan_defaults_read on public.plan_defaults for select using (true);
