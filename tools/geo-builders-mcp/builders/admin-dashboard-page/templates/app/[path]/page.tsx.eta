import { cookies } from 'next/headers';
import { createServerClient } from '@supabase/ssr';
import { redirect } from 'next/navigation';

export const dynamic = 'force-dynamic';

export default async function AdminDashboard(){
  const cookieStore = cookies();
  const supa = createServerClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        getAll() { return cookieStore.getAll(); },
        setAll(cookiesToSet) {
          try {
            cookiesToSet.forEach(({ name, value, options }) => cookieStore.set(name, value, options));
          } catch {}
        }
      }
    }
  );

  const { data: { user } } = await supa.auth.getUser();
  if (!user) redirect('/login');

  const { data: profile } = await supa.from('profiles').select('role,email').eq('id', user.id).single();
  if (profile?.role !== 'admin') {
    return (
      <div className='p-8'>
        <h1 className='text-2xl font-bold mb-4'>Access Denied</h1>
        <p className='text-gray-600'>You must be an admin to access this page.</p>
      </div>
    );
  }

  // Admin can view all profiles via RLS policy
  const { data: allProfiles } = await supa
    .from('profiles')
    .select('id,email,full_name,role,created_at')
    .order('created_at', { ascending: false });

  return (
    <div className='p-8 max-w-6xl mx-auto'>
      <div className='mb-6'>
        <h1 className='text-3xl font-bold mb-2'>Admin Dashboard</h1>
        <p className='text-gray-600'>Manage users and roles</p>
      </div>

      <div className='bg-white border rounded-lg shadow-sm'>
        <div className='px-6 py-4 border-b'>
          <h2 className='text-lg font-semibold'>All Users ({allProfiles?.length || 0})</h2>
        </div>
        <div className='overflow-x-auto'>
          <table className='w-full'>
            <thead className='bg-gray-50 border-b'>
              <tr>
                <th className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase'>Email</th>
                <th className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase'>Name</th>
                <th className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase'>Role</th>
                <th className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase'>Created</th>
                <th className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase'>Actions</th>
              </tr>
            </thead>
            <tbody className='divide-y'>
              {allProfiles?.map((p) => (
                <tr key={p.id} className='hover:bg-gray-50'>
                  <td className='px-6 py-4 text-sm text-gray-900'>{p.email}</td>
                  <td className='px-6 py-4 text-sm text-gray-600'>{p.full_name || '-'}</td>
                  <td className='px-6 py-4'>
                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                      p.role === 'admin' ? 'bg-purple-100 text-purple-800' :
                      p.role === 'pro' ? 'bg-green-100 text-green-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {p.role}
                    </span>
                  </td>
                  <td className='px-6 py-4 text-sm text-gray-600'>
                    {new Date(p.created_at).toLocaleDateString()}
                  </td>
                  <td className='px-6 py-4 text-sm'>
                    <form action='/api/admin/update-role' method='POST' className='inline'>
                      <input type='hidden' name='userId' value={p.id} />
                      <select name='role' defaultValue={p.role} className='text-xs border rounded px-2 py-1'>
                        <option value='free'>Free</option>
                        <option value='pro'>Pro</option>
                        <option value='admin'>Admin</option>
                      </select>
                      <button type='submit' className='ml-2 text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700'>
                        Update
                      </button>
                    </form>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <div className='mt-6 grid grid-cols-3 gap-4'>
        <div className='bg-white border rounded-lg p-4'>
          <div className='text-sm text-gray-600'>Total Users</div>
          <div className='text-2xl font-bold'>{allProfiles?.length || 0}</div>
        </div>
        <div className='bg-white border rounded-lg p-4'>
          <div className='text-sm text-gray-600'>Pro Users</div>
          <div className='text-2xl font-bold text-green-600'>
            {allProfiles?.filter(p => p.role === 'pro').length || 0}
          </div>
        </div>
        <div className='bg-white border rounded-lg p-4'>
          <div className='text-sm text-gray-600'>Admins</div>
          <div className='text-2xl font-bold text-purple-600'>
            {allProfiles?.filter(p => p.role === 'admin').length || 0}
          </div>
        </div>
      </div>
    </div>
  );
}
