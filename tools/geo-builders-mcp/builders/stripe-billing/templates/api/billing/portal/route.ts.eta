import { NextRequest, NextResponse } from 'next/server';
import { createServerClient } from '@supabase/ssr';
import { getStripe, getBaseUrl } from '@/lib/stripe';
import { ensureStripeCustomerForUser } from '@/lib/billing';

export const runtime = 'nodejs';
export const dynamic = 'force-dynamic';

export async function POST(req: NextRequest){
  try{
    const supa = createServerClient(process.env.SUPABASE_URL as string, process.env.SUPABASE_ANON_KEY as string, { cookies: { get: (n)=> req.cookies.get(n)?.value, set(){}, remove(){} } });
    const { data: { user } } = await supa.auth.getUser();
    if (!user) return NextResponse.json({ ok:false, error:'unauthorized' }, { status:401 });

    const stripe = getStripe();
    const customer = await ensureStripeCustomerForUser(user);
    if (!customer) return NextResponse.json({ ok:false, error:'no_customer' }, { status:404 });

    const session = await stripe.billingPortal.sessions.create({ customer, return_url: `${getBaseUrl()}/settings/billing` });
    return NextResponse.json({ ok:true, result:{ url: session.url } }, { status:200 });
  }catch(e:any){ return NextResponse.json({ ok:false, error: e?.message||'unknown error' }, { status:500 }); }
}
