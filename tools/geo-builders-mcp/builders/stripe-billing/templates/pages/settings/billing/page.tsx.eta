'use client';
import { useState, useEffect } from 'react';

export default function Billing(){
  const [priceId, setPriceId] = useState('');
  const [busy, setBusy] = useState(false);
  const [msg, setMsg] = useState('');
  const [role, setRole] = useState<'free'|'pro'|'admin'|'unknown'>('unknown');

  async function loadRole(){
    try{ const r = await fetch('/api/roles', { cache: 'no-store' }); const j = await r.json(); setRole((j?.result?.role)||'free'); }catch{ setRole('free'); }
  }
  useEffect(()=>{ loadRole(); }, []);

  async function checkout(){
    setBusy(true); setMsg('');
    try{
      const res = await fetch('/api/billing/create-checkout-session', { method:'POST', headers:{ 'Content-Type':'application/json' }, body: JSON.stringify({ priceId }) });
      const j = await res.json();
      if (!j?.ok) { setMsg(j?.error||'Failed'); return; }
      window.location.href = j.result.url;
    }catch(e:any){ setMsg(e?.message||'Failed'); }
    finally{ setBusy(false); }
  }

  async function portal(){
    setBusy(true); setMsg('');
    try{
      const res = await fetch('/api/billing/portal', { method:'POST' });
      const j = await res.json();
      if (!j?.ok) { setMsg(j?.error||'Failed'); return; }
      window.location.href = j.result.url;
    }catch(e:any){ setMsg(e?.message||'Failed'); }
    finally{ setBusy(false); }
  }

  return (
    <div className='max-w-3xl mx-auto p-6 space-y-6'>
      <h1 className='text-2xl font-semibold'>Billing</h1>
      <p className='text-sm text-gray-600'>Current role: <b>{role}</b></p>

      <div className='border rounded p-4 space-y-3'>
        <div>
          <label className='block text-xs text-gray-500 mb-1'>Stripe Price ID (monthly pro)</label>
          <input className='border rounded px-3 py-2 w-full' placeholder='price_123...' value={priceId} onChange={e=> setPriceId(e.target.value)} />
        </div>
        <div className='flex gap-2'>
          <button className='px-3 py-2 border rounded disabled:opacity-60' disabled={!priceId||busy} onClick={checkout}>{busy?'Starting…':'Upgrade to Pro'}</button>
          <button className='px-3 py-2 border rounded disabled:opacity-60' disabled={busy} onClick={portal}>{busy?'Opening…':'Manage Subscription'}</button>
        </div>
        {msg && <div className='text-sm'>{msg}</div>}
      </div>

      <div className='text-xs text-gray-500'>Tip: You can hardcode a default Price ID in the API if desired.</div>
    </div>
  );
}
